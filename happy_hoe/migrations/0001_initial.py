# Generated by Django 5.1.7 on 2025-05-07 11:18

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_name', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, unique=True)),
                ('location', models.CharField(blank=True, default='', max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'Branches',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('description', models.TextField(blank=True, default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Userprofile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_salesagent', models.BooleanField(default=True, null=True)),
                ('is_manager', models.BooleanField(default=True, null=True)),
                ('is_director', models.BooleanField(default=True, null=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('is_online', models.BooleanField(default=True)),
                ('username', models.CharField(blank=True, max_length=50, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('gender', models.CharField(blank=True, choices=[('Female', 'Female'), ('Male', 'Male')], max_length=10)),
                ('phone', models.CharField(max_length=10, unique=True)),
                ('address', models.CharField(blank=True, max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('branch', models.ForeignKey(blank=True, default=1, max_length=20, null=True, on_delete=django.db.models.deletion.CASCADE, to='happy_hoe.branch')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'userprofile',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Produce',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, max_length=20, unique=True)),
                ('product_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('product_description', models.TextField(blank=True)),
                ('product_image', models.ImageField(blank=True, upload_to='product_images')),
                ('product_category', models.CharField(blank=True, max_length=100)),
                ('product_stock', models.IntegerField(blank=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='happy_hoe.branch')),
            ],
            options={
                'verbose_name': 'Produce',
                'verbose_name_plural': 'Produce',
                'db_table': 'produce',
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_price', models.IntegerField(blank=True, default=1000, null=True)),
                ('quantity', models.IntegerField(blank=True, default=5, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('amount_received', models.IntegerField(blank=True, default=1500, null=True)),
                ('payment_method', models.CharField(blank=True, choices=[('Cash', 'Cash'), ('Credit', 'Credit'), ('Mobile Money', 'Mobile Money')], max_length=50, null=True)),
                ('payment_status', models.CharField(choices=[('PAID', 'Paid'), ('PENDING', 'Pending'), ('CANCELLED', 'Cancelled')], default='PAID', max_length=20)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branch_sales', to='happy_hoe.branch')),
                ('sales_agent', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['branch', '-date'],
            },
        ),
        migrations.CreateModel(
            name='CreditSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=100)),
                ('national_id', models.CharField(blank=True, max_length=20, null=True)),
                ('contact', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be in the format: '+2567XXXXXXXX'.", regex='^\\+?256[0-9]{9,15}$')])),
                ('location', models.CharField(max_length=100)),
                ('due_date', models.DateField()),
                ('amount_paid', models.IntegerField(default=10000, max_length=10)),
                ('balance', models.IntegerField(blank=True, default=0, max_length=10, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PAID', 'Paid'), ('OVERDUE', 'Overdue')], default='PENDING', max_length=20)),
                ('sale', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credit_details', to='happy_hoe.sale')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, choices=[('beans', 'beans'), ('soybeans', 'soybeans'), ('gnuts', 'gnuts'), ('maize', 'maize'), ('cowpeas', 'cowpeas')], max_length=50, null=True)),
                ('total_quantity', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('issued_quantity', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('received_quantity', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('cost_of_stock', models.DecimalField(blank=True, decimal_places=0, default=1000000, max_digits=50, null=True)),
                ('unit_cost', models.IntegerField(blank=True, default=500, null=True)),
                ('unit_price', models.IntegerField(blank=True, default=500, null=True)),
                ('date_of_stock', models.DateField(auto_now_add=True, null=True)),
                ('supplier_name', models.CharField(blank=True, max_length=100, null=True)),
                ('supplier_contact', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be in the format: '+2567XXXXXXXX'.", regex='^\\+?256[0-9]{9,15}$')])),
                ('type_of_produce', models.CharField(blank=True, max_length=100, null=True)),
                ('Category_name', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='happy_hoe.category')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branch_stock', to='happy_hoe.branch')),
                ('entry_agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stocks_entered', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='sale',
            name='product_name',
            field=models.ForeignKey(blank=True, max_length=100, null=True, on_delete=django.db.models.deletion.CASCADE, to='happy_hoe.stock'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['branch', 'date'], name='happy_hoe_s_branch__79989e_idx'),
        ),
    ]
